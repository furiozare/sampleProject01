<?php

namespace AppBundle\Repository;

use Doctrine\Common\Collections\Criteria;
use Doctrine\ORM\QueryBuilder;

/**
 * KategoriNewsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class KategoriNewsRepository extends \Doctrine\ORM\EntityRepository
{
    private $alias = 'kategoriNews';

    public function query(QueryBuilder $queryBuilder = null)
    {
        if (is_null($queryBuilder)) {
            $queryBuilder = $this->createQueryBuilder($this->alias);
        }

        return $queryBuilder;
    }

    public function queryById($id, QueryBuilder $queryBuilder = null)
    {
        if (is_null($queryBuilder)) {
            $queryBuilder = $this->createQueryBuilder($this->alias);
        }

        return $queryBuilder->andWhere($queryBuilder->expr()->eq($this->alias . '.id', ':id'))
            ->setParameter(':id', $id);
    }

    public function queryBySlug($slug, QueryBuilder $queryBuilder = null)
    {
        if (is_null($queryBuilder)) {
            $queryBuilder = $this->createQueryBuilder($this->alias);
        }

        return $queryBuilder->andWhere($queryBuilder->expr()->eq("$this->alias.slug", ':slug'))
            ->setParameter(':slug', $slug);
    }

    public function queryAktif(QueryBuilder $queryBuilder = null)
    {
        if (is_null($queryBuilder)) {
            $queryBuilder = $this->createQueryBuilder($this->alias);
        }

        return $queryBuilder->andWhere($queryBuilder->expr()->eq("$this->alias.aktif", true));
    }

    public function queryOrderByNama($criteria = Criteria::ASC, QueryBuilder $queryBuilder = null)
    {
        if (is_null($queryBuilder)) {
            $queryBuilder = $this->createQueryBuilder($this->alias);
        }

        return $queryBuilder->addOrderBy("$this->alias.nama", $criteria);
    }

    public function findAktifBySlug($slug)
    {
        $queryBuilder = $this->queryAktif();
        $queryBuilder = $this->queryBySlug($slug, $queryBuilder);
        $queryBuilder = $this->queryOrderByNama(Criteria::ASC, $queryBuilder);

        return $queryBuilder->setMaxResults(1)->getQuery()->getOneOrNullResult();
    }
}
