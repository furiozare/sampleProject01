<?php

namespace AppBundle\Repository;

use Doctrine\ORM\QueryBuilder;

/**
 * KategoriPartRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class KategoriPartRepository extends \Doctrine\ORM\EntityRepository
{
    private $alias = 'ktgrprt';

    public function query(QueryBuilder $queryBuilder = null)
    {
        if (is_null($queryBuilder)) {
            $queryBuilder = $this->createQueryBuilder($this->alias);
        }

        return $queryBuilder;
    }

    public function queryAktif(QueryBuilder $queryBuilder = null)
    {
        if (is_null($queryBuilder)) {
            $queryBuilder = $this->createQueryBuilder($this->alias);
        }

        return $queryBuilder->andWhere($queryBuilder->expr()->eq($this->alias . '.aktif', ':aktif'))
            ->setParameter(':aktif', true);
    }

    public function queryById($id, QueryBuilder $queryBuilder = null)
    {
        if (is_null($queryBuilder)) {
            $queryBuilder = $this->createQueryBuilder($this->alias);
        }

        return $queryBuilder->andWhere($queryBuilder->expr()->eq($this->alias . '.id', ':id'))
            ->setParameter(':id', $id);
    }

    public function queryOrderByNamaASC(QueryBuilder $queryBuilder = null)
    {
        if (is_null($queryBuilder)) {
            $queryBuilder = $this->createQueryBuilder($this->alias);
        }

        return $queryBuilder->addOrderBy($this->alias . '.nama', 'ASC');
    }

    public function findAktifBySlug($slug)
    {
        $queryBuilder = $this->createQueryBuilder($this->alias);

        return $queryBuilder->andWhere($queryBuilder->expr()->eq($this->alias . '.slug', ":slug"))
            ->setParameter(":slug", $slug['slug'])
            ->andWhere($queryBuilder->expr()->eq($this->alias . '.aktif', 1))
            ->getQuery()
            ->getOneOrNullResult();
    }
}
